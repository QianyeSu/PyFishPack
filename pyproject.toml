[build-system]
requires = [
    "setuptools>=61.0",
    "wheel", 
    "numpy>=1.24.0",
    "meson",
    "ninja",
]
build-backend = "setuptools.build_meta"

[project]
name = "PyFishPack"
version = "1.0.0"
description = "Python wrapper for FISHPACK - Fast direct solvers for separable elliptic PDEs"
readme = "README.md"
authors = [{ name = "PyFishPack Contributors" }]
license = "MIT"
requires-python = ">=3.9"
keywords = [
    "numerical-analysis",
    "pde-solver",
    "elliptic-equations",
    "scientific-computing",
    "fishpack",
    "fortran",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Fortran",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.24.0",
]

[project.urls]
"Homepage" = "https://github.com/your-username/PyFishPack"
"Repository" = "https://github.com/your-username/PyFishPack"
"Bug Tracker" = "https://github.com/your-username/PyFishPack/issues"

[tool.setuptools]
packages = ["PyFishPack"]

[tool.setuptools.package-data]
"PyFishPack" = ["*.pyd", "*.so", "*.dylib", "src/*.f", "src/*.pyf", "meson.build"]

# Tool configurations for code quality

[tool.black]
line-length = 88
target-version = [
    'py39',
    'py310', 
    'py311',
    'py312',
    "py313",
]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | PyFishPack/build
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["PyFishPack", "tests"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    "PyFishPack/build",
]
max-complexity = 10

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=PyFishPack",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["PyFishPack"]
omit = ["*/tests/*", "*/test_*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.pydocstyle]
convention = "numpy"
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D105"]